NOTES:

View both point clouds - pcl_viewer -multiview 1 mesh.vtk pointsFilt.pcd points.pcd -normals 1/10

(POIS) - View 4 point clouds - pcl_viewer -multiview 1 points.pcd Filtered.pcd.pcd smoothedcloud.pcd poisson.vtk -normals 1/10

THREADING 
	-ONLY START NEW THREAD IF PREVIOUS MESH IS COMPLETE? SKIP IF NOT?
	-START THREAD UNDER DIFFERENT NAME IF THREAD ISNT COMPLETE??

MLS
	- LINEAR, INSTEAD OF 2ND ORDER


TO DO:
	- Remove Plane visualizer after good plane found
	- ASYNC send points, or run on different thread
	- Improve filtering
	- Remove prefab, just set anchor?
	- Upsampling?


	- Downsampling

	- RGB values of point cloud

	- Export image for photogrammetry + pose
	
	- Texture Mesh


v1 - 
mK = 15
stdDev = 1

Removed 5613 - 5292

Groups of about 15 - 50 points floating on line of table surface.

v2 
mK = 25
stdDev = 1

changed normals to 0.03

Removed 5215 - 4979

Removed way more of the outside floating groups, 1 distinct group / line where shadow of box was.

v3 
mk = 50
stdDev = 1
normals still 0.03

Removed: 

V4
NO FILTERING
0.4 CONF



Sweetspot around 0.6 confidence

ARGS
-port p :: set the server port (default: 11111)
-ft ftStart :: Set the number of points to start filtering at
-rD radDown :: Set the radius for Radius Outlier Removal (Default 0.05)
-mNei minNei :: Set the minimum neighbours for Radius Outlier Removal (Default 40)
-rad rad :: Set the search radius for MLS Smoothing (Default 0.04)
-nr, neRad :: Set the search radius for Normal Estimation (Default 0.04)
-std, stdDev :: Set the standard deviation multiplier for the statistical outlier removal
-mK, mK :: Set the number of nearest neighbours for statistical outlier removal

pcl::console::parse_argument (argc, argv, "-ft", ftStart);
pcl::console::parse_argument (argc, argv, "-rD", radDown);
pcl::console::parse_argument (argc, argv, "-mNei", minNei);
pcl::console::parse_argument (argc, argv, "-rad", rad);
pcl::console::parse_argument (argc, argv, "-nr", neRad);
pcl::console::parse_argument (argc, argv, "-std", stdDev);
pcl::console::parse_argument (argc, argv, "-mK", mK);
